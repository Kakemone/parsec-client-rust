// Copyright 2020 Contributors to the Parsec project.
// SPDX-License-Identifier: Apache-2.0
//! Error types specific to the Parsec client
use parsec_interface::requests::ResponseStatus;

/// Enum used to denote errors returned to the library user
#[derive(Debug)]
pub enum Error {
    /// Errors originating in the service
    Service(ResponseStatus),
    /// Errors originating in the client
    Client(ClientErrorKind),
}

/// Types of errors local to the client library
#[derive(Debug)]
pub enum ClientErrorKind {
    /// Errors generated by the Parsec interface library
    Interface(ResponseStatus),
    /// Errors generated by interacting with the underlying IPC mechanism
    Ipc(::std::io::Error),
    /// The opcode of the response does not match the opcode of the request
    InvalidServiceResponseType,
}

impl From<ClientErrorKind> for Error {
    fn from(client_error: ClientErrorKind) -> Self {
        Error::Client(client_error)
    }
}

/// Result type used for the internals and interface of the Parsec client
pub type Result<T> = ::std::result::Result<T, Error>;
